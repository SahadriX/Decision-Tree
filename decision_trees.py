# -*- coding: utf-8 -*-
"""DECISION TREES

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VmT9zmSNeef5QFvi2ABtXlOhIIseJBv1
"""

import pandas as pd

import matplotlib.pyplot as plt

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline#will ensure that plots are displayed inline within the Jupyter notebook.

from sklearn.datasets import load_iris

iris=load_iris()

iris

iris.target

import seaborn as sns

sns.load_dataset("iris")

df=sns.load_dataset("iris")

df.head()

"""NOW WE HAVE TO DIVIDE THE DATA INTO DEPENDENT AND INDEPENDENT FEATURES"""

X=df.iloc[:,:-1]
X.head()

Y=iris.target
Y

"""NOW DO TRAIN TEST SPLIT"""

from sklearn.model_selection import train_test_split

X_test, X_train, Y_test, Y_train = train_test_split(X, Y, test_size=0.33, random_state=42)

X_train

from sklearn.tree import DecisionTreeClassifier

treemodel=DecisionTreeClassifier()

treemodel.fit(X_train,Y_train)

from sklearn import tree
plt.figure()
tree.plot_tree(treemodel,filled=True)

Y_pred=treemodel.predict(X_test)
Y_pred

from sklearn.metrics import accuracy_score,classification_report

score=accuracy_score(Y_test,Y_pred)
print(score)

print(classification_report(Y_test,Y_pred))

